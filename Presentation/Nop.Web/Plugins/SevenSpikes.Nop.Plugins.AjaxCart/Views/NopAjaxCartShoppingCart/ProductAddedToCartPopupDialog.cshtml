@** Copyright 2017 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@

@model SevenSpikes.Nop.Plugins.AjaxCart.Models.ProductAddedToCartPopupDialogModel

@{
    var shoppingCartItemModel = Model.MiniShoppingCart.Items[0];
}

<div class="productAddedToCartWindow">
    <div class="productAddedToCartWindowTitle">
        @T("SevenSpikes.NopAjaxCart.ShoppingCartNotificationBoxTitle")
    </div>
    <div class="productAddedToCartItem">
        <div class="productAddedToCartWindowImage">
            <a href="@Url.RouteUrl("Product", new { SeName = shoppingCartItemModel.ProductSeName })" title="@shoppingCartItemModel.Picture.Title">
                <img alt="@shoppingCartItemModel.Picture.AlternateText" src="@shoppingCartItemModel.Picture.ImageUrl" title="@shoppingCartItemModel.Picture.Title" />
            </a>
        </div>
        <div class="productAddedToCartWindowDescription">
            <h1>
                <a href="@Url.RouteUrl("Product", new { SeName = shoppingCartItemModel.ProductSeName })">@shoppingCartItemModel.ProductName</a>
            </h1>
            <strong class="price">@shoppingCartItemModel.UnitPrice @T("SevenSpikes.NopAjaxCart.PerUnit")</strong>
            <div class="attributeInfo">@Html.Raw(shoppingCartItemModel.AttributeInfo)</div>
            <span class="quantity">@T("SevenSpikes.NopAjaxCart.ShoppingCartNotificationBoxQuantity") : @shoppingCartItemModel.Quantity</span>
        </div>
    </div>
    <div class="productAddedToCartWindowSummary row">
        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12" style=" margin: 0; padding: 0; ">
            @if (!Model.MiniShoppingCart.DisplayCheckoutButton) {
                var checkoutUrl = "";
                if (Model.MiniShoppingCart.AnonymousCheckoutAllowed && Model.MiniShoppingCart.CurrentCustomerIsGuest) {
                    checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                } else {
                    checkoutUrl = Url.RouteUrl("Checkout");
                }

                <a class="viewBasketLink" href="@Url.RouteUrl("ShoppingCart")">@T("SevenSpikes.NopAjaxCart.ShoppingCartNotificationBoxViewYourBasket")</a>
                <div class="checkoutButtonWrapper" style="width:95%;">
                    @*<input type="submit" class="button-1 productAddedToCartWindowCheckout" value="@T("Checkout.Button")" onclick="setLocation('@checkoutUrl');" />*@
                    <input id="addedToCartButton" type="submit" class="button-1 productAddedToCartWindowCheckout" value="" onclick="setLocation('@checkoutUrl');" @*style="background-image: url('images/ico-cart.png')"*@ />
                </div>
            } else {
                <div class="shoppingCartButtonWrapper" style="width:95%;">
                    @*<input type="submit" class="button-1 productAddedToCartWindowCheckout" value="@T("ShoppingCart.Mini.ViewCart")" onclick="setLocation('@Url.RouteUrl("ShoppingCart")');" />*@
                    <input id="addedToWishlistButton" type="submit" class="button-1 productAddedToCartWindowCheckout" value="" onclick="setLocation('@Url.RouteUrl("ShoppingCart")');" />
                </div>
            }
        </div>
  <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12" style=" margin: 0; padding: 0; ">
            <a class="continueShoppingLink" href="#" style="width: 100%;">@T("SevenSpikes.NopAjaxCart.ShoppingCartNotificationBoxContinueShopping")</a>
        </div>
        @if (Model.EnableRelatedProductsInPopup) {
            @await Component.InvokeAsync("NopAjaxCartPopupRelatedProducts", new { productId = shoppingCartItemModel.ProductId });
        }

        @if (Model.EnableCrossSellProductsInPopup) { 
            @await Component.InvokeAsync("NopAjaxCartPopupCrossSellProducts", new { productId = shoppingCartItemModel.ProductId });
        }
    </div>
</div>
