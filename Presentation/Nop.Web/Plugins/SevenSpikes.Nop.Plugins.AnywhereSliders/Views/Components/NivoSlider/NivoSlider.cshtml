@model NivoModel
@inject IWorkContext workContext

@{
    Layout = null;

    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Scripts/AnywhereSliders.min.js");

    //TODO: UPGRADE 4.0 check this!
    // Check for IE 8
    var userAgent = Url.ActionContext.HttpContext.Request.Headers["User-Agent"];
    if (!String.IsNullOrEmpty(userAgent) && userAgent.ToString().ToLower().IndexOf("MSIE 8.0", StringComparison.InvariantCultureIgnoreCase) > 0)
    {
        Html.AppendCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Styles/nivo/ie8-fix.css");
    }

    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Styles/nivo/nivo-slider.css");
    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Themes/" + Model.Theme + "/Content/nivo/nivo.css");

    var supportRtl = workContext.WorkingLanguage.Rtl;
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Styles/nivo/nivo.rtl.css");
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Themes/" + Model.Theme + "/Content/nivo/nivo.rtl.css");
    }

    string classcol = Model.SliderHtmlElementId != "WidgetSlider-home_page_main_slider-1" ? "col-md-4" : string.Empty;
    string skin = Model.Settings.Theme ?? string.Empty;
    string showCaptionsClass = Model.Settings.ShowCaption ? string.Empty : "no-captions";

    var imagesString = string.Empty;

    foreach (var sliderImage1 in Model.SliderImages)
    {
        imagesString += RenderSliderLine(sliderImage1.PicturePath, sliderImage1.DisplayText, sliderImage1.Alt, Model.Settings.Links, sliderImage1.Url);
    }

    imagesString = imagesString.Replace(Environment.NewLine, string.Empty).Trim();
}

@functions
{
    //Used for nivo slider images in the case when we have more than one image
    public string RenderSliderLine(string pictureUrl, string text, string alt, bool haveLink, string link)
    {
        string sliderLine = string.Empty;

        if (!string.IsNullOrEmpty(pictureUrl))
        {
            if (string.IsNullOrWhiteSpace(alt))
            {
                alt = "slider image";
            }

            if (haveLink && !string.IsNullOrEmpty(link))
            {
                if (Model.Settings.ShowCaption)
                {
                    sliderLine += $"<a href=\"{link}\"><img src=\"{pictureUrl}\" data-thumb=\"{pictureUrl}\" alt=\"{alt}\" title=\"{text}\" /></a>";
                }
                else
                {
                    if (!string.IsNullOrEmpty(text))
                    {
                        text = Regex.Replace(text, @"<[^>
]*(>|$)", String.Empty);
                    }

                    sliderLine += $"<a href=\"{link}\" title=\"{text}\"><img src=\"{pictureUrl}\" data-thumb=\"{pictureUrl}\" alt=\"{alt}\" /></a>";
                }
            }
            else
            {
                sliderLine += $"<img src=\"{pictureUrl}\" data-thumb=\"{pictureUrl}\" alt=\"{alt}\" title=\"{text}\" />";
            }
        }

        return sliderLine;
    }

    //Used when we have only one image, so that we do not initialize the nivo slider, but just display the image.
    //Used this helper also when we have a slider with more than one image so that we first render the first image and on document ready initialize the nivo slider.
    //Thus there will be no issue on load page - when page is loaded and after that the slider is initialized
    public string RenderSingleSliderImageLine(SliderImageModel sliderImage)
    {
        string singleSliderImageLine = string.Empty;

        var alt = String.IsNullOrEmpty(sliderImage.Alt) ? "banner" : sliderImage.Alt;
        var strippedDisplayText = sliderImage.DisplayText;

        if (!string.IsNullOrEmpty(strippedDisplayText))
        {
            strippedDisplayText = Regex.Replace(strippedDisplayText, @"<[^>
    ]*(>|$)", String.Empty);
        }

        if (Model.Settings.Links && !String.IsNullOrEmpty(sliderImage.Url))
        {
            if (Model.Settings.ShowCaption)
            {
                singleSliderImageLine += $"<a href=\"{sliderImage.Url}\"><img class=\"nivo-main-image\" src=\"{sliderImage.PicturePath}\" alt=\"{alt}\" /></a>";
            }
            else
            {
                singleSliderImageLine += $"<a href=\"{sliderImage.Url}\" title=\"{strippedDisplayText}\"><img class=\"nivo-main-image\" src=\"{sliderImage.PicturePath}\" alt=\"{alt}\" /></a>";
            }
        }
        else
        {
            singleSliderImageLine += $"<img class=\"nivo-main-image\" src=\"{sliderImage.PicturePath}\" alt=\"{alt}\" title=\"{strippedDisplayText}\" />";
        }

        singleSliderImageLine += $"<div class=\"nivo-caption\" style=\"display: block;\">{Html.Raw(sliderImage.DisplayText)}</div>";

        return singleSliderImageLine;
    }
}


<div id="div-@Model.SliderHtmlElementId" style="margin-left: 0px !important" class="slider-wrapper anywhere-sliders-nivo-slider theme-@skin @showCaptionsClass"
     data-imagesCount="@Model.SliderImages.Count"
     data-sliderHtmlElementId="@Model.SliderHtmlElementId"
     data-imagesString="@imagesString"
     data-effect="@Model.Settings.Effect"
     data-slices="@Model.Settings.Slices"
     data-boxCols="@Model.Settings.BoxCols"
     data-boxRows="@Model.Settings.BoxRows"
     data-animSpeed="@Model.Settings.AnimationSpeed"
     data-pauseTime="@Model.Settings.AutoSlideInterval"
     data-directionNav="@Model.Settings.EnableDirectionNavigation.ToString().ToLowerInvariant()"
     data-controlNav="@Model.Settings.EnableControlNavigation.ToString().ToLowerInvariant()"
     data-controlNavThumbs="@Model.Settings.EnableControlNavigationThumbs.ToString().ToLowerInvariant()"
     data-pauseOnHover="@Model.Settings.PauseOnHover.ToString().ToLowerInvariant()"
     data-prevText="@Model.Settings.PrevText"
     data-nextText="@Model.Settings.NextText">
    @if (Model.SliderImages.Count == 1)
    {
        @Html.Raw(RenderSingleSliderImageLine(Model.SliderImages[0]));
    }
    else
    {
        // add javascript
        Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/SevenSpikes.Core/Scripts/swipeEvents.min.js");
        Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/SevenSpikes.Nop.Plugins.AnywhereSliders/Scripts/nivo/jquery.nivo.slider.min.js");

        if (Model.Settings.RandomStart)
        {
            Random r = new Random();
            int randomIndex = r.Next(0, Model.SliderImages.Count - 1);

            // the idea is to reorganize the slider images so that the random becomes the first
            var randomStartSlideModels = new List<SliderImageModel>
                ();
            // take the random start image and all after it
            randomStartSlideModels.AddRange(Model.SliderImages.Skip(randomIndex));
            // take all other images form the beginning to the random start
            randomStartSlideModels.AddRange(Model.SliderImages.Take(randomIndex));

            Model.SliderImages = randomStartSlideModels;
        }

        <div id="@Model.SliderHtmlElementId" class="nivoSlider">
            @Html.Raw(RenderSingleSliderImageLine(Model.SliderImages[0]))
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        var col = 0;
        var col1 = 0;
        var col2 = 0;
        var col3 = 0;
        var col4 = 0;
        var col5 = 0;
        var col6 = 0;
        var totalpoll = 0;
        var totalpoll1 = 0;
        var totalpoll2 = 0;
        var totalpoll3 = 0;
        var totalpoll4 = 0;
        var totalpoll5 = 0;
        var totalpoll6 = 0;
        var array = [];
        var array1 = [];
        var array2 = [];
        var array3 = [];
        var array4 = [];
        var array5 = [];
        var array6 = [];
        for (var i = 0; i < 10000; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_before_poll-" + i);
            if (myEle != null) {
                array.push(i);
                if (totalpoll < 3) {
                    totalpoll = totalpoll + 1;
                }
            }
            var myEle1 = document.getElementById("div-WidgetSlider-home_page_top-" + i);
            if (myEle1 != null) {
                array1.push(i);
                if (totalpoll1 < 3) {
                    totalpoll1 = totalpoll1 + 1;
                }
            }
            var myEle2 = document.getElementById("div-WidgetSlider-home_page_before_categories-" + i);
            if (myEle2 != null) {
                array2.push(i);
                if (totalpoll2 < 3) {
                    totalpoll2 = totalpoll2 + 1;
                }
            }
            var myEle3 = document.getElementById("div-WidgetSlider-home_page_before_news-" + i);
            if (myEle3 != null) {
                array3.push(i);
                if (totalpoll3 < 3) {
                    totalpoll3 = totalpoll3 + 1;
                }
            }
            var myEle4 = document.getElementById("div-WidgetSlider-home_page_bottom-" + i);
            if (myEle4 != null) {
                array4.push(i);
                if (totalpoll4 < 3) {
                    totalpoll4 = totalpoll4 + 1;
                }
            }
            var myEle5 = document.getElementById("div-WidgetSlider-home_page_before_products-" + i);
            if (myEle5 != null) {
                array5.push(i);
                if (totalpoll5 < 3) {
                    totalpoll5 = totalpoll5 + 1;
                }
            }
            var myEle6 = document.getElementById("div-WidgetSlider-home_page_before_bestSellers-" + i);
            if (myEle6 != null) {
                array6.push(i);
                if (totalpoll6 < 3) {
                    totalpoll6 = totalpoll6 + 1;
                }
            }
        }
        col = 12 / totalpoll;
        col1 = 12 / totalpoll1;
        col2 = 12 / totalpoll2;
        col3 = 12 / totalpoll3;
        col4 = 12 / totalpoll4;
        col5 = 12 / totalpoll5;
        col6 = 12 / totalpoll6;
        for (var i = 0; i < array.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_before_poll-" + array[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_before_poll-" + array[i]).addClass("col-md-" + col);
            }
        }
         for (var i = 0; i < array1.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_top-" + array1[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_top-" + array1[i]).addClass("col-md-" + col1);
            }
        }
         for (var i = 0; i < array2.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_before_categories-" + array2[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_before_categories-" + array2[i]).addClass("col-md-" + col2);
            }
        }
         for (var i = 0; i < array3.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_before_news-" + array3[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_before_news-" + array3[i]).addClass("col-md-" + col3);
            }
        }
         for (var i = 0; i < array4.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_bottom-" + array4[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_bottom-" + array4[i]).addClass("col-md-" + col4);
            }
        }
         for (var i = 0; i < array5.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_before_products" + array5[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_before_products" + array5[i]).addClass("col-md-" + col5);
            }
        }
         for (var i = 0; i < array6.length; i += 1) {
            var myEle = document.getElementById("div-WidgetSlider-home_page_before_bestSellers-" + array6[i]);
            if (myEle != null) {
                if (i > 0) {
                    //myEle.setAttribute("style", "margin-left: 20px !important")
                    myEle.removeAttribute("style");
                }
                $("#div-WidgetSlider-home_page_before_bestSellers-" + array6[i]).addClass("col-md-" + col6);
            }
        }
    });
</script>




