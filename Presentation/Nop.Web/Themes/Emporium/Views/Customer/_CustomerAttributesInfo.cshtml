@model IList<CustomerAttributeModel>
@using Nop.Core.Domain.Catalog
@using Nop.Core
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization
@using Nop.Services.Configuration
@inject IWorkContext workContext
@{

    var _localizationServices = EngineContext.Current.Resolve<ILocalizationService>().GetResource("customersettings.showid".ToLower());

    var _localizationService = EngineContext.Current.Resolve<ISettingService>().GetAllSettings().Where(x => x.Name.ToLowerInvariant().Contains("customersettings.showid".ToLowerInvariant())).ToList();

    var ids = _localizationService[0].Value.Split(',');
    var id1 = ids[0];
    var id2 = ids[1];
    var id3 = ids[2];
    var id4 = ids[3];
    var id5 = ids[4];
}
@*foreach (var attribute in Model.Where(x => x.Id < 1011 && x.Id != 6 && x.Id != 3 && x.Id != 4 && x.Id != 1008))*@
@foreach (var attribute in Model.Where(x => x.Id < Convert.ToInt32(id1) && x.Id !=  Convert.ToInt32(id2) && x.Id !=  Convert.ToInt32(id3) && x.Id != Convert.ToInt32(id4) && x.Id !=  Convert.ToInt32(id5)))
////@foreach (var attribute in Model)
{
    var controlId = $"customer_attribute_{attribute.Id}";
    var textPrompt = attribute.Name;

    <div class="inputs custom-attributes">
        @if (attribute.IsRequired)
        {
            <nop-required />
        }
        @switch (attribute.AttributeControlType)
        {
            case AttributeControlType.DropdownList:
                {
                    <select name="@(controlId)" id="@(controlId)">
                        @if (!attribute.IsRequired)
                        {
                            <option value="0">---</option>
                        }
                        @foreach (var attributeValue in attribute.Values)
                        {
                            <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                        }
                    </select>
                }
                break;
            case AttributeControlType.RadioList:
                {
                    <ul class="option-list" readonly>
                        @foreach (var attributeValue in attribute.Values)
                        {
                            <li>
                                <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" disabled />
                                <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                            </li>
                        }
                    </ul>
                }
                break;
            case AttributeControlType.Checkboxes:
            case AttributeControlType.ReadonlyCheckboxes:
                {
                    <ul class="option-list">
                        @foreach (var attributeValue in attribute.Values)
                        {
                            <li>
                                <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                                <label for="@(attributeValue.Id)">@attributeValue.Name</label>
                            </li>
                        }
                    </ul>
                }
                break;
            case AttributeControlType.TextBox:
                {
                    @if (attribute.IsRequired)
                    {
                        <label id="@(controlId)_@(attribute.Id)">@attribute.Name</label>
                        <input name="@(controlId)" asp-for="@(controlId)" type="text" data-val-required="Se requiere el @textPrompt" style="background-color: #fafafa;" class="textbox" id="@(controlId)" onblur="alphanumericCompany(this)" value="@attribute.DefaultValue" readonly />

                        <nop-required />
                    }
                    else
                    {
                        <label id="@(controlId)_@(attribute.Id)">@attribute.Name</label>
                        <input name="@(controlId)" asp-for="@(controlId)" type="text" class="textbox" style="background-color: #fafafa;" id="@(controlId)" onblur="alphanumericCompany(this)" value="@attribute.DefaultValue" readonly />
                    }
                    <span asp-validation-for="@(controlId)" id="@(controlId)Validate"></span>

                }
                break;
            case AttributeControlType.MultilineTextbox:
                {
                    <textarea id="@(controlId)" name="@(controlId)">@attribute.DefaultValue</textarea>
                }
                break;
            case AttributeControlType.Datepicker:
            case AttributeControlType.FileUpload:
            case AttributeControlType.ColorSquares:
            case AttributeControlType.ImageSquares:
                {
                    //not support attribute type
                }
                break;
        }
    </div>
}





