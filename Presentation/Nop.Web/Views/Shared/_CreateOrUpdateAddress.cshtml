@model AddressModel
@using Nop.Core.Infrastructure;
@using Nop.Services.Directory;
@{
    var enabledProvinces = EngineContext.Current.Resolve<IStateProvinceService>().GetStateProvincesByCountryId(86).ToList();

    if (ViewData.TemplateInfo.HtmlFieldPrefix.Equals("ShippingNewAddress"))
    {
       enabledProvinces = enabledProvinces.Where(x => !string.IsNullOrEmpty(x.Abbreviation)).ToList();
    }

        foreach (var state in enabledProvinces)
        {
            var item = Model.AvailableStates.Where(x => x.Value.Equals(state.Id)).FirstOrDefault();
            if (item == null)
            {
                Model.AvailableStates.Add(new SelectListItem { Text = state.Name, Value = state.Id.ToString() });
            }
        }

}

@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <!--CSS utilizados por intlTelInput para telefonos con formatos y banderas intenacionales-->
<link href="~/Themes/Emporium/Content/intltelinput/css/intlTelInput.css" rel="stylesheet" type="text/css">
<link href="~/Themes/Emporium/Content/intltelinput/css/demo.css" rel="stylesheet" type="text/css">

<style>
    .iti.iti--allow-dropdown {
        width: 100%;
    }
    .center-2 {
        width: 70%;
    }
    #phone2 {
        width: 100%;
    }
    #phoneLabelCol {
        text-align: left !important;
    }
    #phoneLabelCol > label {
        display: inline-block;
        max-width: calc(100% - 10px);
        width: auto;
        font-size: 15px;
        margin: 0 0 8px;
        font-weight: bold;
        color: #444;
        text-align: left;
        white-space: normal;
    }
    #phoneRequiredCol {
        text-align: right !important;
    }
</style>

    //we don't move this script to the footer as it's used in Ajax requests where footer is not available
    <script>
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").on('change', function () {
            var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
            var statesProgress = $("#states-loading-progress");
            statesProgress.show();
                $.ajax({
                cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                          ddlStates.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                },
                    error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    statesProgress.hide();
                }
            });
        });

            $("#@Html.IdFor(model => model.CountryId)").on('submit', function () {
                // document.getElementById('@Html.IdFor(model => model.CountryId)').value = 86;
               });


        });
    </script>
}

<input asp-for="Id" type="hidden" />
<div class="edit-address">
    <div class="inputs">
        <label asp-for="FirstName" asp-postfix=":"></label>
        <input asp-for="FirstName" />
        <nop-required />
        <span asp-validation-for="FirstName"></span>
    </div>
    <div class="inputs">
        <label asp-for="LastName" asp-postfix=":"></label>
        <input asp-for="LastName" />
        <nop-required />
        <span asp-validation-for="LastName"></span>
    </div>
    <div class="inputs">
        <label asp-for="Email" asp-postfix=":"></label>
        <input asp-for="Email" />
        <nop-required />
        <span asp-validation-for="Email"></span>
    </div>
    @if (Model.CompanyEnabled)
    {
        <div class="inputs">
            <label asp-for="Company" asp-postfix=":"></label>
            <input asp-for="Company" />
            @if (Model.CompanyRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="Company"></span>
        </div>
    }
    @if (Model.CountryEnabled)
    {
        <div class="inputs">
            <label asp-for="CountryId" asp-postfix=":"></label>
            <select asp-for="CountryId" asp-items="Model.AvailableCountries" style="pointer-events: none; cursor: default;opacity:0.6;"></select>
            <nop-required />
            <span asp-validation-for="CountryId"></span>
        </div>
    }

    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="inputs">

            <label asp-for="StateProvinceId" asp-postfix=":"></label>
            <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            <span asp-validation-for="StateProvinceId" id="StateProvinceIdValidate"></span>
        </div>
    }
    @if (Model.CountyEnabled)
    {
        <div class="inputs">
            <label asp-for="County" asp-postfix=":"></label>
            <input asp-for="County" />
            @if (Model.CountyRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="County"></span>
        </div>
    }
    @if (Model.CityEnabled)
    {
        <div class="inputs">
            <label asp-for="City" asp-postfix=":"></label>
            <input asp-for="City" />
            @if (Model.CityRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="City"></span>
        </div>
    }
    @if (Model.StreetAddressEnabled)
    {
        <div class="inputs">
            <label asp-for="Address1" asp-postfix=":"></label>
            <input asp-for="Address1" />
            @if (Model.StreetAddressRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="Address1"></span>
        </div>
    }
    @if (Model.StreetAddress2Enabled)
    {
        <div class="inputs">
            <label asp-for="Address2" asp-postfix=":"></label>
            <input asp-for="Address2" />
            @if (Model.StreetAddress2Required)
            {
                <nop-required />
            }
            <span asp-validation-for="Address2"></span>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <div class="inputs">
            <label asp-for="ZipPostalCode" asp-postfix=":"></label>
            <input asp-for="ZipPostalCode" />
            @if (Model.ZipPostalCodeRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="ZipPostalCode"></span>
        </div>
    }
    @if (Model.PhoneEnabled)
    {
        @*<div class="inputs">
                <label asp-for="PhoneNumber" asp-postfix=":"></label>
                    <input asp-for="PhoneNumber" />
                    @if (Model.PhoneRequired)
                    {
                        <nop-required />
                    }
                    <span asp-validation-for="PhoneNumber"></span>
            </div>*@

        <div class="row">
            <div class="col-6" id="phoneLabelCol">
                <label asp-for="PhoneNumber" asp-postfix=":"></label>
            </div>
            <div class="col-6" id="phoneRequiredCol">
                @if (Model.PhoneRequired)
                {
                    <nop-required />
                }
            </div>
        </div>
        <input id="PhoneNumber2" name="PhoneNumber2" onblur="numberPhone()" placeholder="4241234567" />

        <span asp-validation-for="PhoneNumber" id="PhoneValidate"></span>
        <span>@T("Register.Mensaje.ValidatePhone") </span>
        <input  id="PhoneNumber" name="PhoneNumber" hidden />
        <input asp-for="PhoneNumber" hidden />
    }
    @if (Model.FaxEnabled)
    {
        <div class="inputs">
            <label asp-for="FaxNumber" asp-postfix=":"></label>
            <input asp-for="FaxNumber" />
            @if (Model.FaxRequired)
            {
                <nop-required />
            }
            <span asp-validation-for="FaxNumber"></span>
        </div>
    }
    @if (Model.CustomAddressAttributes.Count > 0)
    {
        @await Html.PartialAsync("_AddressAttributes", Model.CustomAddressAttributes)
    }
</div>

<script src="~/js/jquery.mask.min.js"></script>
<script src="~/Themes/Emporium/Content/intltelinput/js/intlTelInput.js"></script>
<script type="text/javascript">
@*$('#@Html.IdFor(model => model.PhoneNumber)').mask('(0000)000-0000');*@
    $('#PhoneNumber2').mask('0000000000');

    var input = document.querySelector("#PhoneNumber2");
    var iti = window.intlTelInput(input, {
        preferredCountries: ['ve'],
        //utilsScript: "Themes/Emporium/Content/intltelinput/js/utils.js",
    });


    if (document.getElementById("Address_FirstName").value.length > 0 && document.getElementById("Address_LastName").value.length > 0 && document.getElementById("Address_Email").value.length > 0) {
        window.onload = function () {
            format(document.getElementById("Address_PhoneNumber"))
            //format(document.getElementById("PhoneNumber"));
            //format(document.getElementById("PhoneNumber2"));
        }

        function format(VALOR) {
            var tlf = VALOR.value.slice(-10);
            var dialcode = VALOR.value.slice(0, -10);

            //var text = iti.getSelectedCountryData(dialCode: dialcode);
            iti.setNumber(dialcode);
            document.getElementById("PhoneNumber2").value = tlf;

        }

    }

     var enviar = true;
     @*var input = document.getElementById('ShippingNewAddress_StateProvinceId');
    if (input != null) {
        $("#@Html.IdFor(model => model.StateProvinceId)").on('change', function () {
            var selectedItemName = $('select[id="@Html.IdFor(model => model.StateProvinceId)"] option:selected').text();
            if ($(this).val() > 0) {
                if (selectedItemName.toUpperCase() == "Díaz".toUpperCase() ||
                    selectedItemName.toUpperCase() == "Arismendi".toUpperCase() ||
                    selectedItemName.toUpperCase() == "García".toUpperCase() ||
                    selectedItemName.toUpperCase() == "Maneiro".toUpperCase() ||
                    selectedItemName.toUpperCase() == "Mariño".toUpperCase()) {

                    $("#StateProvinceIdValidate").removeClass("field-validation-error").addClass("field-validation-valid");
                    $("#@Html.IdFor(model => model.StateProvinceId)").removeClass("input-validation-error");
                    document.getElementById("StateProvinceIdValidate").innerHTML = "";
                    enviar = true;
                } else {

                    $("#@Html.IdFor(model => model.StateProvinceId)").addClass("input-validation-error");
                    $("#StateProvinceIdValidate").removeClass("field-validation-valid").addClass("field-validation-error");
                    document.getElementById("StateProvinceIdValidate").innerHTML = "El municipio seleccionado no admite envíos.";
                    enviar = false;
                }
            } else {
                  $("#@Html.IdFor(model => model.StateProvinceId)").addClass("input-validation-error");
                    $("#StateProvinceIdValidate").removeClass("field-validation-valid").addClass("field-validation-error");
                    document.getElementById("StateProvinceIdValidate").innerHTML = "Seleccione un municipio"
                    enviar = false;
            }


        });
    }*@



    $(document).ready(function () {

        if (document.getElementById("@Html.IdFor(model => model.CountryId)") != null) {
            document.getElementById('@Html.IdFor(model => model.CountryId)').value = 86;
        }
                    @*var selectedItem = 86;
                    var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                    var statesProgress = $("#states-loading-progress");
                    statesProgress.show();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                        data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                        success: function (data) {
                            ddlStates.html('');
                              console.log(data);
                            $.each(data, function (id, option) {

                                ddlStates.append($('<option></option>').val(option.id).html(option.name));
                            });
                            statesProgress.hide();
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Failed to retrieve states.');
                            statesProgress.hide();
                        }
                    });*@

        });

    function numberPhone() {
        var regexp = /^[0-9]{10}$/;
        var inputtxt = document.getElementById('PhoneNumber2').value;
        if (regexp.test(inputtxt)) {
            $("#PhoneNumber2").removeClass("input-validation-error");
            $("#PhoneValidate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById("PhoneValidate").innerHTML = "";

            if (inputtxt.length < 11) {
                var text = iti.getSelectedCountryData();
                var dial = text.dialCode;

                var elementphone = "+" + dial + inputtxt;

                document.getElementById("PhoneNumber").value = elementphone;


                $("#@Html.IdFor(x => x.PhoneNumber)").val(elementphone) 
            }

        }
        else {
            $("#phone2").addClass("input-validation-error");
            $("#PhoneValidate").removeClass("field-validation-valid").addClass("field-validation-error");

            if (document.getElementById("PhoneNumber2").value.length > 0 && document.getElementById("PhoneNumber").value.length != 10) {
                document.getElementById("PhoneValidate").innerHTML = "El Teléfono es inválido.";
            } else {
                if (document.getElementById("PhoneNumber2").value.length == 0)
                    document.getElementById("PhoneValidate").innerHTML = "Se requiere el Teléfono.";
            }
        }

    }

      function HabilitarCombo() {
          $("#@Html.IdFor(model => model.CountryId)").removeAttr('disabled');

          @*if ($("#@Html.IdFor(model => model.StateProvinceId)").val() == 0) {
              enviar = false;
          }*@

          return enviar;
          }
</script>
