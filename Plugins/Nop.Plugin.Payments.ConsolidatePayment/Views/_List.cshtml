@model Nop.Plugin.Payments.ConsolidatePayment.Models.ConfigurationModel
@inject Nop.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@using System.Globalization;
@{
    //page title
    ViewBag.Title = T("Admin.Catalog.Categories.Manage").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Categories");
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

}

<nop-antiforgery-token />


<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">


            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="categories-grid"></div>

                    <script>
                        $(document).ready(function() {
                            $("#categories-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("List", "PaymentConsolidatePayment"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: function() {
                                                var data = {
                                                    TiendaId: $('#@Html.IdFor(model => model.TiendaId)').val(),
                                                    OrdenId: parseInt($('#@Html.IdFor(model => model.Orden)').val()),
                                                    ClienteId: 0,
                                                    Referencia: $('#@Html.IdFor(model => model.Referencia)').val(),
                                                    MetodoPago: $('#@Html.IdFor(model => model.MetodoPago)').val(),
                                                    StatusPaymentOrder: $('#@Html.IdFor(model => model.StatusPaymentOrder)').val(),
                                                    BancoReceptorId: $('#@Html.IdFor(model => model.BancoReceptorId)').val()
                                                };
                                                addAntiForgeryToken(data);
                                                return data;
                                            }
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @await Html.PartialAsync("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [
                                    {
                                        field: "OrdenId",
                                         title: "@T("Plugins.Payments.Transfer.Fields.Order")",
                                         width: 20,
                                         headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: "<a href=@Url.Action("Edit", "Order")/#=OrdenId# name='order#:OrdenId#' id='order#:OrdenId#'>#:OrdenId#</a>"

                                    },
                                    {
                                        field: "FechaUltimaActualizacion".toString("dd/MM/yyyy"),
                                        title: "@T("Plugins.Payments.ConsolidatePayment.UltimaActualizacion")",
                                        width: 120,
                                        type: "date",
                                        format: "{0:G}"
                                    }, {
                                        field: "Tienda",
                                        title: "@T("Plugins.Payments.ConsolidatePayment.Tienda")",
                                        width: 150
                                    },
                                    {
                                        field: "MetodoPago",
                                        title: "@T("Plugins.Payments.ConsolidatePayment.MetodoPago")",
                                        width: 150,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '# if(MetodoPago.includes("Zelle")) {# <span>Zelle</span> #} else {# <span>Transferencia bancaria</span> #} #'
                                    },   {
                                        field: "Referencia",
                                        title: "@T("Plugins.Payments.ConsolidatePayment.Referencia")",
                                        width: 50,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        //template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                    },
                                     {
                                        field: "BancoReceptor",
                                        title: "@T("Plugins.Payments.ConsolidatePayment.BancoReceptor")",
                                        width: 150,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '# if( BancoReceptor == null ) {# <span>No aplica</span> #} else {# <span>#:BancoReceptor#</span> #} #'

                                    }, {
                                        field: "MontoTotalOrden",
                                        title: "@T("Plugins.Payments.ConsolidatePayment.MontoTotalOrden")",
                                         width: 50,
                                         headerAttributes: { style: "text-align:center" },
                                         attributes: { style: "text-align:right" },
                                        // format: "{0:n2}",
                                         template: '#if(CodigoMoneda=="Bs.") {# <span id=\"aggregator-total-block\">#:CodigoMoneda##:MontoTotalOrden#</span> #} else {# <span id=\"aggregator-total-block\">$#:MontoTotalOrden#</span>#}#'
                                    }, {
                                        field: "Id",
                                        title: "@T("Plugins.Payments.ConsolidatePayment.Pay")",
                                        width: 50,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                         template:"# if(StatusPaymentOrder==10) {#<a href=@Url.Action("UpdateStatePayment", "PaymentConsolidatePayment")?id=#:Id# name='markorderaspaid#:Id#' id='markorderaspaid#:Id#' class='btn btn-primary'>@T("Admin.Orders.Fields.MarkAsPaid")</a> #} else {# <span class='grid-report-item green'>@T("Plugins.Payments.ConsolidatePayment.Consolidate")</span> #}# "

                                        //template: '<a class="btn btn-default" href="Edit/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                    }
                                ]
                            });
                        });

                    </script>

                    <script>
                        $(document).ready(function() {
                            //search button
                            $('#search-categories').click(function() {
                                //search
                                var grid = $('#categories-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                return false;
                            });

                            @*$("#@Html.IdFor(model => model.SearchCategoryName)").keydown(function(event) {
                                if (event.keyCode == 13) {
                                    $("#search-categories").click();
                                    return false;
                                }
                            });*@
                        });
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
