@model Nop.Plugin.Payments.SigoCreditos.Models.SigoCreditosInfoModel
@using Nop.Core;
@using System.Globalization;
@using Nop.Core.Infrastructure;
@using Nop.Services.Customers;
@using Nop.Services.Configuration;
@using Nop.Services.Common;
@using Nop.Core.Domain.Customers;
@{
    Layout = "";
}
@inject IWorkContext workContext
@inject IStoreContext storeContext;
@{

    var CustomerIdEcommerce = workContext.CurrentCustomer.Id;
    var ColorSchemeSetting = EngineContext.Current.Resolve<ISettingService>().GetAllSettings().Where(x => x.Name.ToLowerInvariant().Contains("emporiumthemesettings.preset".ToLowerInvariant())).ToList();
    var Colors = ColorSchemeSetting[0].Value.Split(',');
    var MainColor = '#' + Colors[0];
    var SecondaryColor = '#' + Colors[1].Trim();

    var Customerclient = EngineContext.Current.Resolve<ICustomerService>().GetCustomerById(workContext.CurrentCustomer.Id);
    var EsValidoCRM = EngineContext.Current.Resolve<IGenericAttributeService>().GetAttribute<string>(Customerclient, "EsValidoCRM");
    var selectedCustomerAttributesString = EngineContext.Current.Resolve<IGenericAttributeService>().GetAttribute<string>(Customerclient, NopCustomerDefaults.CustomCustomerAttributes);
    var TipoDocumento = EngineContext.Current.Resolve<ICustomerAttributeParser>().ParseValues(selectedCustomerAttributesString, 8).FirstOrDefault();
    var Documento = EngineContext.Current.Resolve<ICustomerAttributeParser>().ParseValues(selectedCustomerAttributesString, 1).FirstOrDefault();

}

<script type="text/javascript">
    loaderShow();
</script>

<style>

    .swal2-styled.swal2-confirm,
    .page-item.active .page-link {
        background-color: @SecondaryColor;
        border-color: @SecondaryColor;
    }

    #historyContainer {
        margin: 10px 0;
    }

    .card {
        margin-top: 10px;
    }

    thead, tbody {
        border-bottom: medium solid rgba(0, 0, 0, 0.37);
    }

    .tableContainer table {
        font-size: small;
        overflow: scroll !important;
    }

    .EmptyTable {
        text-align: center;
    }
    .swal2-actions {
flex-direction: row-reverse;
}
    @@media screen and (max-width:425px) {
        .tableContainer {
            overflow: scroll !important;
        }

        td div, th div {
            width: max-content;
            padding-left: 10px;
            padding-top: 10px;
        }
    }

    @@media screen and (min-width:426px) {
        td div, th div {
            width: max-content;
            padding-right: 10px;
            padding-top: 10px;
        }
    }
    /* ////////////////////////////////////////////////////////////////////  */
    #transactionTable {
        margin: 20px auto !important;
        padding: 30px 0 20px !important;
    }

    #historyFormCollapse > .card-body > .card.card-body {
        border: none;
        padding: 0.7rem;
        padding-top: 0px;
        margin-top: 0px !important;
    }

    #historyFormCollapse > .card-body {
        margin-top: 0px !important;
    }

    #transactionTable_wrapper {
        font-size: 13px;
    }

    #transactionTable_length {
        width: 50%;
        float: left;
    }

    #transactionTable_filter {
        width: 40%;
        float: right;
    }

    #transactionTable_info, #transactionTable_paginate {
        padding-top: 10px;
        width: 100%;
        text-align: center;
        justify-content: center;
        display: flex;
    }

    #transactionTable_length > label > select {
        height: 30px;
    }

    table.dataTable thead > tr > th.sorting_asc,
    table.dataTable thead > tr > th.sorting_desc,
    table.dataTable thead > tr > th.sorting,
    table.dataTable thead > tr > td.sorting_asc,
    table.dataTable thead > tr > td.sorting_desc,
    table.dataTable thead > tr > td.sorting {
        padding-right: 20px !important;
    }

    @@media screen and (max-width:769px) {
        div.dataTables_wrapper div.dataTables_length,
        div.dataTables_wrapper div.dataTables_filter,
        div.dataTables_wrapper div.dataTables_info,
        div.dataTables_wrapper div.dataTables_paginate {
            text-align: center;
        }

        #transactionTable_filter,
        #transactionTable_paginate {
            float: none;
            margin: 0 auto;
            padding-top: 10px;
            display: flex;
        }

        #transactionTable_length,
        #transactionTable_info {
            width: 100%;
            float: none;
        }

        .tableContainer {
            overflow-x: scroll;
        }

        div.dataTables_wrapper div.dataTables_filter input {
            width: 75% !important;
        }
    }

    @@media screen and (max-width: 426px) {
        #transactionTable_filter, #transactionTable_paginate {
            width: 60%;
        }

        #transactionTable_info {
            justify-content: normal;
        }
    }

    @@media screen and (min-width: 768px) {
        .page.account-page.customer-info-page > .page-body {
            max-width: 100% !important;
        }
    }

    /* ///////////////////////////////////////////////////////////////////////  */
    input#swal-input1.swal2-input::placeholder,
    input#swal-input2.swal2-input::placeholder,
    input#swal-input3.swal2-input::placeholder,
    input#swal-input4.swal2-input::placeholder {
    /*  color: #aaa;*/
      color: #8c8c8c;
      opacity: 1;
    }

    /* ///////////////////////////////////////////////////////////////////////  */
</style>

<div class="page account-page customer-info-page">
    <div class="page-body">
        <div class="inputs">
            <input asp-for="Emisor.SigoClubId" hidden />
        </div>
        <div class="inputs">
            <input asp-for="Emisor.EntityId" hidden />
        </div>
        @*  tabla con la consulta del balance del cliente*@
        <div>
            <div class="card">
                <div class="card-header" id="headingSaldoFormCollapse">
                    <div class="row">
                        <div class="col-lg-9 col-md-9 col-sm-8">
                            <strong>@T("Account.BalancPersonalDetails")</strong>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">
                            @*<button class="button-1 search-box-button" id="saldoCollapseButton" data-toggle="collapse" href="#saldoFormCollapse" role="button" aria-expanded="false" aria-controls="saldoFormCollapse">@T("abonoForm.CollapseButton.show")</button>*@

                            @if (EsValidoCRM != null && Convert.ToBoolean(EsValidoCRM))
                            {
                                <button class="button-1 search-box-button" id="saldoCollapseButton" data-toggle="collapse" href="#saldoFormCollapse" role="button" aria-expanded="false" aria-controls="saldoFormCollapse">@T("abonoForm.CollapseButton.show")</button>
                            }
                            else
                            {
                                @if (Model.Emisor.EntityId == 0)
                                {
                                    <button class="button-1 search-box-button" id="saldoCollapseButton" data-toggle="collapse" href="#saldoFormCollapse" role="button" aria-expanded="false" aria-controls="saldoFormCollapse">@T("abonoForm.CollapseButton.show")</button>

                                }
                                else
                                {
                                    @if (TipoDocumento.Contains("1"))
                                    {
                                        <button class="button-1 search-box-button" id="saldoPinButton" onclick="SwalfireClienteNatural()"> @T("SigoCreditosPaypal.validationpin.button")</button>

                                    }
                                    else
                                    {
                                        <button class="button-1 search-box-button" id="saldoPinButton" onclick="SwalfireClienteJuridico()">
                                            @T("SigoCreditosPaypal.validationpin.button")
                                        </button>

                                    }
                                }
                            }


                        </div>
                    </div>
                </div>

                <div id="saldoFormCollapse" class="collapse" aria-labelledby="headingSaldoFormCollapse">
                    <div class="card-body">
                        <div class="card card-body">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 tableContainer" style="margin: 20px auto;">
                                    @if (Model.Emisor.EntityId > 0)
                                    {
                                        @if (EsValidoCRM != null && Convert.ToBoolean(EsValidoCRM))
                                        {
                                            @if (Model.Emisor.SaldoActualList.Count > 0)
                                            {
                                                <table id="SaldoActualTable" width="100%" cellspacing="2" cellpadding="1" border="0" style="margin: 0 auto;">
                                                    <thead>
                                                        <tr>
                                                            <th><div>@T("Account.AccountTypeName")</div></th>
                                                            <th><div>@T("Account.AccountTypeQuantity")</div></th>
                                                            <th><div>@T("Account.AccountTypeCurrency")</div></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>

                                                        @foreach (var account in Model.Emisor.SaldoActualList)
                                                        {
                                                            <tr>
                                                                <td><div>@account.Descripcion</div></td>
                                                                <td class="Monto"><div>$@account.MontoDisponible.ToString("N", new CultureInfo("is-IS"))</div></td>
                                                                <td><div>@account.Moneda</div></td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            }
                                            else
                                            {
                                                <div class="EmptyTable"><span>@T("Account.EmptyTable")</span></div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="EmptyTable"><span>@T("Account.EmptyTable")</span></div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="EmptyTable"><span>@T("SigoCreditos.Abono.CustomerNotFound")</span></div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ///////////////////////////    Seccion Collapse Group     ////////////////////////////////////////////////////////////////////////////////////////////// -->
        <div id="collapseGroup">
            <div class="card">
                <div class="card-header" id="headingAbonoFormCollapse">
                    <div class="row">
                        <div class="col-lg-9 col-md-9 col-sm-8">
                            <strong>@T("SigoCreditos.cardheader.titleCredit")</strong>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">
                            <button class="button-1 search-box-button" id="abonoFormCollapseButton" style="" data-toggle="collapse" href="#abonoFormCollapse" role="button" aria-expanded="false" aria-controls="abonoFormCollapse">@T("abonoForm.CollapseButton.show")</button>
                        </div>
                    </div>
                </div>

                <div id="abonoFormCollapse" class="collapse" aria-labelledby="headingAbonoFormCollapse" data-parent="#collapseGroup">
                    <div class="card-body">
                        <div class="card card-body">
                            @await Html.PartialAsync("~/Plugins/Payments.SigoCreditos/Views/_SigoCreditosInfo.cshtml", Model)
                        </div>
                    </div>
                </div>
            </div>
            @*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*@
            <div class="card" style="display:none;">
                <div class="card-header" id="headingCardFormCollapse">
                    <div class="row">
                        <div class="col-lg-9 col-md-9 col-sm-8">
                            <strong>Gift card </strong>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">
                            <button class="button-1 search-box-button" id="cardFormCollapseButton" style="" data-toggle="collapse" href="#cardFormCollapse" role="button" aria-expanded="false" aria-controls="cardFormCollapse">Mostrar</button>
                        </div>
                    </div>
                </div>
                <div id="cardFormCollapse" class="collapse" aria-labelledby="headingCardFormCollapse" data-parent="#collapseGroup">
                    <div class="card-body">
                        <div class="card card-body">
                            @*@await Html.PartialAsync("~/Plugins/Payments.SigoCreditos/Views/_SigoCreditosGiftCard.cshtml", Model)*@
                        </div>
                    </div>
                </div>
            </div>
            @*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*@
            <div class="card">
                <div class="card-header" id="headingHistoryFormCollapse">
                    <div class="row">
                        <div class="col-lg-9 col-md-9 col-sm-8">
                            <strong>@T("SigoCreditos.Account.TransactionDetails")</strong>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">
                            <button class="button-1 search-box-button" id="historyFormCollapseButton" style="" data-toggle="collapse" href="#historyFormCollapse" role="button" aria-expanded="false" aria-controls="historyFormCollapse">@T("abonoForm.CollapseButton.show")</button>
                        </div>
                    </div>
                </div>
                <div id="historyFormCollapse" class="collapse" aria-labelledby="headingCardFormCollapse" data-parent="#collapseGroup">
                    <div class="card-body">
                        <div class="card card-body">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 tableContainer" style="margin: 20px auto;padding: 0 5px;">
                                    @if (Model.TransaccionList.Count > 0)
                                    {
                                        <table id="transactionTable" width="100%" cellspacing="2" cellpadding="1" border="0" style="margin: 0 auto;PADDING: 5px;">
                                            <thead>
                                                <tr>
                                                    <th><div>@T("Account.CreateDate")</div></th>
                                                    <th><div>@T("Account.TransaccionPaypalID")</div></th>
                                                    <th><div>@T("Account.ReferenceSigoCreditos")</div></th>
                                                    <th><div>@T("Account.CedulaReceptor")</div></th>
                                                    <th><div>@T("Account.NombreReceptor")</div></th>
                                                    <th><div>@T("Account.Monto")</div></th>
                                                    <th><div>@T("Account.Estatus_Operacion")</div></th>

                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var SCP in Model.TransaccionList)
                                                {
                                                    <tr>
                                                        <td><div>@SCP.FechaCreacion.ToString("dd/MM/yyyy")</div></td>
                                                        <td><div>@SCP.TransaccionPaypalID</div></td>
                                                        <td><div>@SCP.TransaccionCreditID</div></td>
                                                        <td><div>@SCP.CedulaReceptor</div></td>
                                                        <td><div>@SCP.NombreReceptor</div></td>
                                                        <td class="MontoAbono"><div>$@SCP.Monto.ToString("N", new CultureInfo("is-IS"))</div></td>
                                                        <td>
                                                            <div>
                                                                @if (SCP.Estatus_Operacion)
                                                                {<span style="background-color: #00a65a;border-radius: .25em;color: white;padding: .1em .3em .1em;">Exitoso</span>}
                                                                else
                                                                { <span style="background-color: #dd4b39;border-radius: .25em;color: white;padding: .1em .3em .1em;">Sin Abonar</span>}
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    }
                                    else
                                    {
                                        <div class="EmptyTable"><span>@T("Account.EmptyTable")</span></div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <!-- Modal paypalTransaction -->
        <div class="modal fade" id="paypalTransaction" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 style="text-align: center;" class="modal-title" id="exampleModalLabel">@T("SigoCreditos.Modal.Title")</h5>
                    </div>
                    <div class="modal-body">
                        <h5 style="text-align: center;"></h5>
                    </div>
                    <div class="modal-footer">
                        <button id="btnCerrarModalPaypal" type="button" class="btn btn-secondary" data-dismiss="modal">@T("SigoCreditos.Modal.Closed")</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        autoCompleteInputFields();
    });

    function autoCompleteInputFields() {
        $("input").attr("autocomplete", "off");
    }
    function SwalfireClienteNatural() {
        Swal.fire({
            title: '@T("SigoCreditosPaypal.validationpin")',
            html:
                  '<input id="swal-input3" value="@Documento" readonly autocomplete="off" class="swal2-input" style="font-family: verdana;font-size: 0.9em; margin-bottom: 0em!important" maxlength=8 placeholder="@T("SigoCreditosPaypal.validationpin.documentplaceholder")"> '
                + '<input id="swal-input0" type="password" autocomplete="off" style="width:0px; height:0px; border:none"> '
                + '<input id="swal-input4" type="password" autocomplete="off" class="swal2-input" style="font-family: verdana; margin-bottom: 0.5em!important; margin-top: 0em!important;font-size: 1.125em;padding: 0 .75em;" maxlength=6 placeholder="@T("SigoCreditosPaypal.validationpin.pinplaceholder")"> '
            ,
            onRender: () => {
                document.getElementById("swal-input4").setAttribute("type","password");
                document.getElementById("swal-input4").val = "";
                document.getElementById("swal-input4").placeholder = "@T("SigoCreditosPaypal.validationpin.pinplaceholder")";
            },
            focusConfirm: false,
            inputAttributes: {
                autocapitalize: 'off',
                autocomplete: 'off'
            },
            showCancelButton: true,
            confirmButtonText: '@T("SigoCreditosPaypal.validationpin.confirmButtonText")',
            cancelButtonText: '@T("SigoCreditosPaypal.validationpin.cancelButtonText")',
            showLoaderOnConfirm: true,
            preConfirm: () => {
                var pin = document.getElementById('swal-input4').value;

                var numbers = /^[0-9]{6,}$/;
                isValid = pin.match(numbers);

                if (isValid === null) {
                    if (pin === "") {
                        Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.pinrequired")")
                    } else {
                        if (document.getElementById('swal-input4').length < 6) {
                            Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.pinminimun")");
                        } else { Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.onlynumber")"); }
                    }
                } else {
                    ValidarPin(pin);
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.value) {
                setLocation('@Url.RouteUrl("sigocreditos")');
            }
        });
    }

    function ValidarPin(pin) {
        var route = '@Html.Raw(Url.Action("ValidarPin", "Admin/SigoCreditosInfo", new { @entityid = "TD", @cedula= "cd", @pin = "DC", @tipoDoc = "TC"  }))';
            route = route.replace("TD", $("#@Html.IdFor(model=>model.Emisor.EntityId)").val());
            route = route.replace("cd", @Documento);
            route = route.replace("DC", pin);
            route = route.replace("TC", @TipoDocumento);
        $.ajax({
			type: "POST",
			traditional: true,
			async: false,
			cache: false,
			url: route,
			context: document.body,
            success: function (result) {
                switch (parseInt(result)) {
                    case 0: {
                         Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.pininvalidate")");
                        break;
                    }
                         case 2: {
                         Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.notauthorized")");
                        break;
                    }
                }
			    },
            error: function (xhr) {
                console.log(xhr.responseText);
                Swal.showValidationMessage(xhr.responseText);
			}
		});
    }

    function SwalfireClienteJuridico() {
            Swal.fire({
                title: '@T("SigoCreditosPaypal.validationpin")',
                html:
                    '<input id="swal-input2" autocomplete="off" class="swal2-input" style="font-family: verdana;font-size: 0.9em; margin-bottom: 0em!important" maxlength=8 placeholder="@T("SigoCreditosPaypal.validationpin.documentplaceholder")"> '
                    + '<input id="swal-input0" type="password" autocomplete="off" style="width:0px; height:0px; border:none"> '
                    + '<input id="swal-input1" autocomplete="off" class="swal2-input" style="font-family: verdana; margin-bottom: 0.5em!important; margin-top: 0em!important;font-size: 1.125em;padding: 0 .75em;" maxlength=6 placeholder="@T("SigoCreditosPaypal.validationpin.pinplaceholder")"> '
                    //+ '<script>setTimeout(function(){document.getElementById("swal-input1").type = "password";}, 10);<//script>'
                ,
                focusConfirm: false,
                inputAttributes: {
                    autocapitalize: 'off',
                    autocomplete: 'off'
                },
                onRender: () => {
                    document.getElementById("swal-input1").setAttribute("type","password");
                    document.getElementById("swal-input1").val = "";
                    document.getElementById("swal-input1").placeholder = "@T("SigoCreditosPaypal.validationpin.pinplaceholder")";
                },
                 showCancelButton: true,
                 confirmButtonText: '@T("SigoCreditosPaypal.validationpin.confirmButtonText")',
                 cancelButtonText: '@T("SigoCreditosPaypal.validationpin.cancelButtonText")',
                 showLoaderOnConfirm: true,
                 preConfirm: () => {
                    var pin = document.getElementById('swal-input1').value;
                    var documento = document.getElementById('swal-input2').value;

                    var numbers = /^[0-9]{6}$/;
                     isValid = pin.match(numbers);
                     var numbersCed = /^[0-9]{6,8}$/;
                    isValidCed = documento.match(numbersCed);

                    if (isValidCed === null)
                    {
                        if (documento === "") {
                            Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.documentrequired")");
                        }
                        else {
                            if (document.getElementById('swal-input1').value.length < 6)
                                Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.cedminimun")");
                            else Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.onlynumber")");
                        }
                    }
                    else
                    if (isValid === null)
                    {
                        if(pin==="")
                            Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.pinrequired")")
                        else
                              if (document.getElementById('swal-input1').value.length < 6)
                                Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.pinminimun")");
                            else Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.onlynumber")");
                    }
                    else {
                        ValidarPinJuridico(pin, documento);
                   }
            },
            allowOutsideClick: () => !Swal.isLoading()
          }).then((result) => {
            if (result.value) {
                setLocation('@Url.RouteUrl("sigocreditos")');
            }
           });
    }

     function ValidarPinJuridico(pin, documento) {
              var route = '@Html.Raw(Url.Action("ValidarPin", "Admin/SigoCreditosInfo", new { @entityid = "TD", @cedula= "cd", @pin = "DC", @tipoDoc = "TC" }))';
                 route = route.replace("TD", $("#@Html.IdFor(model=>model.Emisor.SigoClubId)").val());
                 route = route.replace("cd", documento);
                 route = route.replace("DC", pin);
                 route = route.replace("TC", @TipoDocumento);
                $.ajax({
			            type: "POST",
			            traditional: true,
			            async: false,
			            cache: false,
			            url: route,
			            context: document.body,
                        success: function (result){
                           switch (parseInt(result)) {
                                case 0: {
                                     Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.pininvalidate")");
                                    break;
                                }
                                     case 2: {
                                     Swal.showValidationMessage("@T("SigoCreditosPaypal.validationpin.notauthorized")");
                                    break;
                                }
                            }
			               },
            error: function (xhr) {
                console.log(xhr.responseText);
                Swal.showValidationMessage(xhr.responseText);
			}
		});
    }


    if (document.getElementById('paypal-button-container') == null) {
        loaderHide();
    }


    $("#abonoFormCollapseButton").on("click", function () {
        if ($("#abonoFormCollapse").hasClass("collapse show")) {
            $("#abonoFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");

        } else {
            $("#abonoFormCollapseButton").text("@T("abonoForm.CollapseButton.hide")");
            if ($("#historyFormCollapse").hasClass("collapse show")) {
                $("#historyFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
            }
            @*if ($("#cardFormCollapse").hasClass("collapse show")) {
                $("#cardFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
            }*@
        }
    });
    $("#historyFormCollapseButton").on("click", function () {
        if ($("#historyFormCollapse").hasClass("collapse show")) {
            $("#historyFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
        } else {
            $("#historyFormCollapseButton").text("@T("abonoForm.CollapseButton.hide")");
            if ($("#abonoFormCollapse").hasClass("collapse show")) {
                $("#abonoFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
            }
            @*if ($("#cardFormCollapse").hasClass("collapse show")) {
                $("#cardFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
            }*@
        }
    });
    @*$("#cardFormCollapseButton").on("click", function () {
        if ($("#cardFormCollapse").hasClass("collapse show")) {
            $("#cardFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
        } else {
            $("#cardFormCollapseButton").text("@T("abonoForm.CollapseButton.hide")");
            if ($("#abonoFormCollapse").hasClass("collapse show")) {
                $("#abonoFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
            }
            if ($("#historyFormCollapse").hasClass("collapse show")) {
                $("#historyFormCollapseButton").text("@T("abonoForm.CollapseButton.show")");
            }
        }
    });*@

    $("#saldoCollapseButton").on("click", function () {
        if ($("#saldoFormCollapse").hasClass("collapse show")) {
            $("#saldoCollapseButton").text("@T("abonoForm.CollapseButton.show")");
        } else {
            $("#saldoCollapseButton").text("@T("abonoForm.CollapseButton.hide")");
        }
    });

  function SuccessAbono(response)
    {
        if (response.Abono.TransaccionPayPalId == "undefined" && response.Abono.Cod_Abono != 0) {
            response.Abono.IdTransaccion = "";
            $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.IdUndefined") ');
            $('#paypalTransaction').modal('show');
            return;
        }
        if (response.Abono.TransaccionPayPalId != "undefined" && response.Abono.Cod_Abono == 0) {
            response.IdTransaccion = "";
            $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.IdUndefined") ' + response.Abono.TransaccionPayPalId + " @T("SigoCreditosPaypal.Transaccion.FailAbono")");
            $('#paypalTransaction').modal('show');
            return;
        }

        if (response.Cod_Abono != 0) {
            $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.Exitosa") ' + response.Abono.TransaccionPayPalId);
        } else
        {
            $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.Exitosa") ' + response.Abono.TransaccionPayPalId + " @T("SigoCreditosPaypal.Transaccion.FailAbono")");
        }
        $('#paypalTransaction').modal('show');
    }

     function FailureAbono(response)
     {

             if (response.Abono.TransaccionPayPalId == "undefined" && response.Cod_Abono != 0) {
                response.Abono.TransaccionPayPalId = "";
                $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.IdUndefined") ');
                $('#paypalTransaction').modal('show');
                return;
             }
            if (response.Abono.TransaccionPayPalId != "undefined" && response.Abono.Cod_Abono == 0) {
                response.Abono.TransaccionPayPalId = "";
                $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.IdUndefined") ' + response.Abono.TransaccionPayPalId  + " @T("SigoCreditosPaypal.Transaccion.FailAbono")");
                $('#paypalTransaction').modal('show');
                return;
            }

            $('#paypalTransaction .modal-body h5').text('@T("SigoCreditosPaypal.Transaccion.Exitosa") ' + response.Abono.TransaccionPayPalId  + " @T("SigoCreditosPaypal.Transaccion.FailAbono")");
            $('#paypalTransaction').modal('show');
            console.log("Failure")

    }

   $("#btnCerrarModalPaypal").on("click", function () {
          console.log("click");
            var route = '@Url.RouteUrl("CustomerSigoCreditos")';
            setLocation(route);
    });

    // Create USD currency formatter.
    var formatter = new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD',
    });

    $("#transactionTable").DataTable({
        responsive: true,
        dom: 'Blfrtip',
        autoWidth: false,
        "language": {
            "url":"@Url.Content("~/Themes/Emporium/Content/DataTables/datatables.spanish.js")"
        }
    });

</script>


